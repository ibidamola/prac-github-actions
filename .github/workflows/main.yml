name: Node.js CI/CD pipeline

on:
  push:
    branches: 
      - main 
  pull_request:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Parallel and Matrix Builds: This strategy allows testing across multiple Node.js versions
    strategy:
      matrix:
        node-version: [18, 20]
        include:
          - node-version: 18
            cache: 'npm'
          - node-version: 20
            cache: 'npm'
    
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Create .env file
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> .env
          echo "VITE_APP_NAME=${{ secrets.VITE_APP_NAME }}" >> .env

      # Managing Build Dependencies: Ensures all required dependencies are installed
      - name: Install dependencies
        run: npm install

      - name: Build the projects
        run: npm run build

      # Managing Build Dependencies: Installing additional dependencies required for testing
      - name: Install testing dependencies
        run: npm install --save-dev jsdom

      - name: Run tests
        run: npx vitest

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # Integrating Code Quality Check: Running ESLint to check code quality
      - name: Run Linter
        run: npx eslint .
